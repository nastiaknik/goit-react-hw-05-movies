{"version":3,"file":"static/js/357.ba848dd2.chunk.js","mappings":"uNAsEA,UAhEgB,WACd,OAA8BA,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GAYR,OAVAE,EAAAA,EAAAA,YAAU,WACRH,GAAa,SAAAD,GAAS,OAAKA,CAAL,KACtBK,EAAAA,EAAAA,IAAWH,GACRI,MAAK,SAAAC,GACJR,EAAWQ,EACZ,IACAC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,IACXG,SAAQ,kBAAMX,GAAa,SAAAD,GAAS,OAAKA,CAAL,GAA5B,GACZ,GAAE,CAACE,KAGF,gCACGF,IACC,iBAAKa,MAAO,CAAEC,UAAW,QAAzB,WACE,SAAC,IAAD,CACEC,MAAO,EACPC,MAAO,IACPC,OAAQ,GACRJ,MAAO,CACLK,QAAS,QACTC,WAAY,WAGhB,SAAC,IAAD,CACEJ,MAAO,EACPC,MAAO,KACPC,OAAQ,GACRJ,MAAO,CAAEO,OAAQ,uBAIvB,eACEP,MAAO,CACLK,QAAS,OACTG,SAAU,OACVC,UAAW,OACXC,UAAW,QACXC,IAAK,QANT,UASIxB,GACAF,GACAA,EAAQ2B,OAAS,GACjB3B,EAAQ4B,KAAI,gBAAGxB,EAAH,EAAGA,GAAIyB,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACV,2BACE,wBAAKD,KACL,cAAGd,MAAO,CAAEgB,aAAc,QAA1B,SAAqCD,MAF9B1B,EADC,OAOdF,GAAaF,GAA8B,IAAnBA,EAAQ2B,SAChC,cAAGZ,MAAO,CAAEU,UAAW,QAASJ,WAAY,QAA5C,+DAMP,C,mMClEKW,EAAM,mCACNC,EAAW,+BAEJC,EAAiB,mCAAG,uGACRC,EAAAA,EAAAA,GAAM,GAAD,OAAIF,EAAJ,uBAAmC,CAC7DG,OAAQ,CACNC,QAASL,KAHkB,uBACvBvB,EADuB,EACvBA,KADuB,kBAMxBA,GANwB,2CAAH,qDASjB6B,EAAW,mCAAG,WAAMC,GAAN,0FACFJ,EAAAA,EAAAA,GAAM,GAAD,OAAIF,EAAJ,iBAA6B,CACvDG,OAAQ,CACNC,QAASL,EACTO,MAAAA,KAJqB,uBACjB9B,EADiB,EACjBA,KADiB,kBAOlBA,GAPkB,2CAAH,sDAUX+B,EAAe,mCAAG,WAAMC,GAAN,0FACNN,EAAAA,EAAAA,GAAM,GAAD,OAAIF,EAAJ,kBAAsBQ,GAAW,CAC3DL,OAAQ,CACNC,QAASL,KAHgB,uBACrBvB,EADqB,EACrBA,KADqB,kBAMtBA,GANsB,2CAAH,sDASfiC,EAAO,mCAAG,WAAMD,GAAN,0FACEN,EAAAA,EAAAA,GAAM,GAAD,OAAIF,EAAJ,kBAAsBQ,EAAtB,YAAyC,CACnEL,OAAQ,CACNC,QAASL,KAHQ,uBACbvB,EADa,EACbA,KADa,kBAMdA,EAAKkC,MANS,2CAAH,sDASPpC,EAAU,mCAAG,WAAMkC,GAAN,0FACDN,EAAAA,EAAAA,GAAM,GAAD,OAAIF,EAAJ,kBAAsBQ,EAAtB,YAAyC,CACnEL,OAAQ,CACNC,QAASL,KAHW,uBAChBvB,EADgB,EAChBA,KADgB,kBAMjBA,EAAKmC,SANY,2CAAH,qD","sources":["components/Reviews.js","utils/service-api.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getReviews } from 'utils/service-api';\nimport Skeleton from 'react-loading-skeleton';\nimport 'react-loading-skeleton/dist/skeleton.css';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const { id } = useParams();\n\n  useEffect(() => {\n    setIsLoading(isLoading => !isLoading);\n    getReviews(id)\n      .then(data => {\n        setReviews(data);\n      })\n      .catch(error => console.log(error))\n      .finally(() => setIsLoading(isLoading => !isLoading));\n  }, [id]);\n\n  return (\n    <>\n      {isLoading && (\n        <div style={{ marginTop: '40px' }}>\n          <Skeleton\n            count={1}\n            width={100}\n            height={19}\n            style={{\n              display: 'block',\n              marginLeft: '40px',\n            }}\n          />\n          <Skeleton\n            count={1}\n            width={1290}\n            height={90}\n            style={{ margin: '0 30px 0 40px' }}\n          />\n        </div>\n      )}\n      <ul\n        style={{\n          display: 'flex',\n          flexWrap: 'wrap',\n          listStyle: 'none',\n          textAlign: 'start',\n          gap: '10px',\n        }}\n      >\n        {!isLoading &&\n          reviews &&\n          reviews.length > 0 &&\n          reviews.map(({ id, author, content }) => (\n            <li key={id}>\n              <h4>{author}</h4>\n              <p style={{ paddingRight: '30px' }}>{content}</p>\n            </li>\n          ))}\n      </ul>\n      {!isLoading && reviews && reviews.length === 0 && (\n        <p style={{ textAlign: 'start', marginLeft: '40px' }}>\n          We don't have any reviews about this movie yet.\n        </p>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst KEY = '53262c5d6ff8109487cc66546be6258b';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios(`${BASE_URL}/trending/movie/day`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n  return data;\n};\n\nexport const searchMovie = async query => {\n  const { data } = await axios(`${BASE_URL}/search/movie`, {\n    params: {\n      api_key: KEY,\n      query,\n    },\n  });\n  return data;\n};\n\nexport const getMovieDetails = async movieId => {\n  const { data } = await axios(`${BASE_URL}/movie/${movieId}`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n  return data;\n};\n\nexport const getCast = async movieId => {\n  const { data } = await axios(`${BASE_URL}/movie/${movieId}/credits`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n  return data.cast;\n};\n\nexport const getReviews = async movieId => {\n  const { data } = await axios(`${BASE_URL}/movie/${movieId}/reviews`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n  return data.results;\n};\n"],"names":["useState","reviews","setReviews","isLoading","setIsLoading","id","useParams","useEffect","getReviews","then","data","catch","error","console","log","finally","style","marginTop","count","width","height","display","marginLeft","margin","flexWrap","listStyle","textAlign","gap","length","map","author","content","paddingRight","KEY","BASE_URL","getTrendingMovies","axios","params","api_key","searchMovie","query","getMovieDetails","movieId","getCast","cast","results"],"sourceRoot":""}