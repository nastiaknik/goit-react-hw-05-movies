{"version":3,"file":"static/js/910.3e47fd18.chunk.js","mappings":"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","sources":["components/Cast.js","utils/service-api.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getCast } from 'utils/service-api';\nimport Loader from './Skeleton/Skeleton';\nimport notFound from '../assets/notFound.webp';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const { id } = useParams();\n\n  useEffect(() => {\n    setIsLoading(isLoading => !isLoading);\n    getCast(id)\n      .then(data => {\n        setCast(data);\n      })\n      .catch(error => console.log(error))\n      .finally(() => setIsLoading(isLoading => !isLoading));\n  }, [id]);\n\n  return (\n    <>\n      {isLoading && <Loader page={'/my-list'} />}\n\n      {!isLoading && cast.length > 0 && (\n        <ul\n          style={{\n            listStyle: 'none',\n            display: 'flex',\n            flexWrap: 'wrap',\n            gap: '10px',\n          }}\n        >\n          {cast.map(({ id, name, profile_path, character }) => (\n            <li\n              key={id}\n              style={{\n                width: '300px',\n                height: '527px',\n                border: '1px solid gray',\n              }}\n            >\n              <img\n                src={\n                  profile_path\n                    ? `https://image.tmdb.org/t/p/original${profile_path}`\n                    : notFound\n                }\n                alt={name}\n                width=\"300\"\n                height=\"450\"\n              />\n              <h2 style={{ padding: 0, margin: 0, marginBottom: '10px' }}>\n                {name}\n              </h2>\n              <p style={{ padding: 0, margin: 0 }}>{character}</p>\n            </li>\n          ))}\n        </ul>\n      )}\n      {!isLoading && cast.length < 0 && (\n        <p style={{ textAlign: 'start', marginLeft: '40px' }}>\n          Cast not known.\n        </p>\n      )}\n    </>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst KEY = '53262c5d6ff8109487cc66546be6258b';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nlet cachedMovies = [];\nlet searchedMovies = [];\n\nexport const getTrendingMovies = async (page = 1) => {\n  /*   if (page === 1) {\n   */ cachedMovies = [];\n  /* } */\n\n  const { data } = await axios(`${BASE_URL}/trending/movie/day`, {\n    params: {\n      api_key: KEY,\n      page,\n    },\n  });\n\n  const uniqueMovies = data.results.filter(movie => {\n    if (cachedMovies.some(cachedMovie => cachedMovie.id === movie.id)) {\n      return false;\n    } else {\n      cachedMovies.push(movie);\n      return true;\n    }\n  });\n  data.results = uniqueMovies;\n  return data;\n};\n\nexport const searchMovie = async (query, page) => {\n  if (page === 1) {\n    searchedMovies = [];\n  }\n  const { data } = await axios(`${BASE_URL}/search/movie`, {\n    params: {\n      api_key: KEY,\n      query,\n      page,\n    },\n  });\n\n  const uniqueMovies = data.results.filter(movie => {\n    if (searchedMovies.some(searchedMovie => searchedMovie.id === movie.id)) {\n      return false;\n    } else {\n      searchedMovies.push(movie);\n      return true;\n    }\n  });\n  data.results = uniqueMovies;\n  return data;\n};\n\nexport const getMovieDetails = async movieId => {\n  const { data } = await axios(`${BASE_URL}/movie/${movieId}`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n  return data;\n};\n\nexport const getCast = async movieId => {\n  const { data } = await axios(`${BASE_URL}/movie/${movieId}/credits`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n  return data.cast;\n};\n\nexport const getReviews = async movieId => {\n  const { data } = await axios(`${BASE_URL}/movie/${movieId}/reviews`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n  return data.results;\n};\n"],"names":["useState","cast","setCast","isLoading","setIsLoading","id","useParams","useEffect","getCast","then","data","catch","error","console","log","finally","page","length","style","listStyle","display","flexWrap","gap","map","name","profile_path","character","width","height","border","src","notFound","alt","padding","margin","marginBottom","textAlign","marginLeft","KEY","BASE_URL","cachedMovies","searchedMovies","getTrendingMovies","axios","params","api_key","uniqueMovies","results","filter","movie","some","cachedMovie","push","searchMovie","query","searchedMovie","getMovieDetails","movieId","getReviews"],"sourceRoot":""}