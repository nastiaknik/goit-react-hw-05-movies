{"version":3,"file":"static/js/771.8c961942.chunk.js","mappings":"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","sources":["components/MovieCard/MovieCard.styled.js","components/MovieCard/MovieCard.js","components/MovieList/MovieList.styled.js","components/MovieList/MovieList.js","components/Searchbar/Searchbar.styled.js","components/Searchbar/Searchbar.js","pages/Movies.js","utils/service-api.js"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const StyledCard = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  border: 1px gray solid;\n  width: 300px;\n  height: 525px;\n  text-align: center;\n  box-shadow: rgba(50, 50, 93, 0.25) 0px 6px 12px -2px,\n    rgba(0, 0, 0, 0.3) 0px 3px 7px -3px;\n`;\n\nexport const StyledLink = styled(NavLink)`\n  text-decoration: none;\n`;\n\nexport const Img = styled.img`\n  background-color: #ebebeb;\n`;\n\nexport const MovieTitle = styled.p`\n  font-size: 20px;\n  font-weight: 700;\n  text-decoration: none;\n  padding: 0 5px;\n  color: black;\n`;\n","import PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\nimport { StyledLink, StyledCard, Img, MovieTitle } from './MovieCard.styled';\nimport defaultPoster from '../../components/defaultImages/default-movie.jpg';\n\nexport const MovieCard = ({ id, poster, title }) => {\n  const location = useLocation();\n  return (\n    <StyledLink to={`/movies/${id}`} state={{ from: location }}>\n      <StyledCard>\n        <Img\n          src={\n            poster\n              ? `https://image.tmdb.org/t/p/original${poster}`\n              : defaultPoster\n          }\n          alt={title}\n          width=\"300\"\n          height=\"450\"\n          loading=\"lazy\"\n        />\n        <MovieTitle>\n          {title.length <= 45 ? title : title.slice(1, 45) + '...'}\n        </MovieTitle>\n      </StyledCard>\n    </StyledLink>\n  );\n};\n\nMovieCard.propTypes = {\n  id: PropTypes.number.isRequired,\n  poster: PropTypes.string,\n  title: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const StyledMovieList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 15px;\n  list-style: none;\n`;\n","import PropTypes from 'prop-types';\nimport { MovieCard } from 'components/MovieCard/MovieCard';\nimport { StyledMovieList } from './MovieList.styled';\n\nexport default function MovieList({ movies }) {\n  return (\n    <StyledMovieList>\n      {movies &&\n        movies.map(({ id, poster_path, title }) => (\n          <li key={id}>\n            <MovieCard id={id} poster={poster_path} title={title} />\n          </li>\n        ))}\n    </StyledMovieList>\n  );\n}\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      poster_path: PropTypes.string,\n      title: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import styled from 'styled-components';\nimport { RiSearchLine } from 'react-icons/ri';\n\nexport const SearchForm = styled.form`\n  position: relative;\n  overflow: hidden;\n  max-width: 300px;\n  margin: 0 auto;\n`;\n\nexport const Input = styled.input`\n  display: inline-block;\n  width: 100%;\n  min-width: 270px;\n  min-height: 35px;\n  padding-left: 10px;\n  padding-right: 10px;\n  font: inherit;\n  font-size: 20px;\n  border: 1px gray solid;\n  outline: none;\n  cursor: pointer;\n\n  ::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n\n  :hover,\n  :focus {\n    border: 1px solid orangered;\n  }\n`;\n\nexport const SearchButton = styled.button`\n  position: absolute;\n  top: 0;\n  right: 0;\n  display: flex;\n  justify-content: center;\n  min-width: 39px;\n  min-height: 39px;\n  padding: 0;\n  margin: 0;\n  border: 1px solid gray;\n  background-color: white;\n  outline: none;\n  cursor: pointer;\n  transition: border 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    border: 1px solid orangered;\n  }\n`;\n\nexport const SearchIcon = styled(RiSearchLine)`\n  width: 100%;\n  height: 100%;\n  padding: 8px;\n  font-size: 20px;\n\n  :hover {\n    color: orangered;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useSearchParams } from 'react-router-dom';\nimport {\n  SearchForm,\n  Input,\n  SearchButton,\n  SearchIcon,\n} from './Searchbar.styled';\n\nconst Searchbar = ({ onSubmit }) => {\n  const [searchParams] = useSearchParams();\n  const search = searchParams.get('search') ?? '';\n\n  return (\n    <SearchForm onSubmit={onSubmit}>\n      <label>\n        <Input\n          type=\"text\"\n          autoFocus\n          placeholder=\"Search movie\"\n          name=\"search\"\n          defaultValue={search}\n        />\n      </label>\n      <SearchButton type=\"submit\">\n        <SearchIcon />\n      </SearchButton>\n    </SearchForm>\n  );\n};\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default Searchbar;\n","import { useState, useEffect, useRef } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport Searchbar from '../components/Searchbar/Searchbar';\nimport MovieList from '../components/MovieList/MovieList';\nimport Loader from '../components/Skeleton/Skeleton';\nimport { searchMovie } from 'utils/service-api';\nimport InfiniteScroll from 'react-infinite-scroll-component';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [isLoading, setIsLoading] = useState(false);\n  const [page, setPage] = useState(1);\n  const currentPage = page;\n  const [totalPages, setTotalPages] = useState(0);\n  const search = searchParams.get('search') || '';\n  const moviesRef = useRef(movies);\n\n  useEffect(() => {\n    setPage(parseInt(searchParams.get('page'), 10) || 1);\n  }, [searchParams]);\n\n  useEffect(() => {\n    setIsLoading(true);\n    if (currentPage === 1) {\n      setSearchParams({ search, page: 1 });\n    }\n\n    if (search?.trim() === '') {\n      toast.warning('Please type name of the movie!', {\n        toastId: 'pls-do-not-duplicate',\n      });\n      setIsLoading(false);\n      return;\n    }\n    if (!search) {\n      setIsLoading(false);\n      return;\n    }\n    /*     if (currentPage === 1 && moviesRef.length === 0) {\n      setMovies([]);\n    } */\n    searchMovie(search, page)\n      .then(data => {\n        if (search && data.total_results === 0) {\n          toast.error(\n            <p>\n              There are no movies for{' '}\n              <span style={{ color: '#e74c3c' }}>{search}</span>!\n            </p>,\n            {\n              toastId: 'can-not-be-duplicated',\n            }\n          );\n        }\n        if (search && data.total_results > 0 && page === 1) {\n          toast.success(\n            <p>\n              We found{' '}\n              <span style={{ color: '#2E8B57', fontWeight: 600 }}>\n                {data.total_results}{' '}\n              </span>\n              {data.total_results === 1 ? 'movie' : 'movies'} for{' '}\n              <span style={{ color: '#2E8B57', fontWeight: 600 }}>\n                {search}\n              </span>\n              !\n            </p>,\n            {\n              toastId: 'cannot-be-duplicated',\n            }\n          );\n        }\n        setTotalPages(data.total_pages);\n        if (currentPage === 1) {\n          setMovies(data.results);\n        } else {\n          setMovies(prevMovies => [...prevMovies, ...data.results]);\n        }\n        setIsLoading(false);\n      })\n      .catch(error => console.log(error));\n  }, [search, page, setSearchParams, currentPage, moviesRef]);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    setPage(1);\n    if (event.currentTarget.elements.search.value) {\n      setSearchParams({\n        search: event.currentTarget.elements.search.value,\n        page: 1,\n      });\n    }\n  };\n\n  const fetchMoreData = () => {\n    if (page < totalPages && search) {\n      setPage(prevPage => prevPage + 1);\n      setSearchParams({\n        search: search,\n        page: page + 1,\n      });\n    }\n  };\n\n  return (\n    <>\n      <Searchbar onSubmit={handleSubmit} />\n      {isLoading && <Loader page=\"/my-list\" />}\n      {search && (\n        <InfiniteScroll\n          dataLength={movies.length}\n          next={fetchMoreData}\n          hasMore={currentPage < totalPages}\n          loader={<Loader page=\"/my-list\" />}\n          scrollThreshold=\"3000px\"\n        >\n          <MovieList movies={movies} />\n        </InfiniteScroll>\n      )}\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst KEY = '53262c5d6ff8109487cc66546be6258b';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nlet cachedMovies = [];\nlet searchedMovies = [];\n\nexport const getTrendingMovies = async (page = 1) => {\n  /*   if (page === 1) {\n   */ cachedMovies = [];\n  /* } */\n\n  const { data } = await axios(`${BASE_URL}/trending/movie/day`, {\n    params: {\n      api_key: KEY,\n      page,\n    },\n  });\n\n  const uniqueMovies = data.results.filter(movie => {\n    if (cachedMovies.some(cachedMovie => cachedMovie.id === movie.id)) {\n      return false;\n    } else {\n      cachedMovies.push(movie);\n      return true;\n    }\n  });\n  data.results = uniqueMovies;\n  return data;\n};\n\nexport const searchMovie = async (query, page) => {\n  if (page === 1) {\n    searchedMovies = [];\n  }\n  const { data } = await axios(`${BASE_URL}/search/movie`, {\n    params: {\n      api_key: KEY,\n      query,\n      page,\n    },\n  });\n\n  const uniqueMovies = data.results.filter(movie => {\n    if (searchedMovies.some(searchedMovie => searchedMovie.id === movie.id)) {\n      return false;\n    } else {\n      searchedMovies.push(movie);\n      return true;\n    }\n  });\n  data.results = uniqueMovies;\n  return data;\n};\n\nexport const getMovieDetails = async movieId => {\n  const { data } = await axios(`${BASE_URL}/movie/${movieId}`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n  return data;\n};\n\nexport const getCast = async movieId => {\n  const { data } = await axios(`${BASE_URL}/movie/${movieId}/credits`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n  return data.cast;\n};\n\nexport const getReviews = async movieId => {\n  const { data } = await axios(`${BASE_URL}/movie/${movieId}/reviews`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n  return data.results;\n};\n"],"names":["StyledCard","styled","StyledLink","NavLink","Img","MovieTitle","MovieCard","id","poster","title","location","useLocation","to","state","from","src","defaultPoster","alt","width","height","loading","length","slice","StyledMovieList","MovieList","movies","map","poster_path","SearchForm","Input","SearchButton","SearchIcon","RiSearchLine","onSubmit","useSearchParams","search","get","type","autoFocus","placeholder","name","defaultValue","useState","setMovies","searchParams","setSearchParams","isLoading","setIsLoading","page","setPage","currentPage","totalPages","setTotalPages","moviesRef","useRef","useEffect","parseInt","trim","toast","toastId","searchMovie","then","data","total_results","style","color","fontWeight","total_pages","results","prevMovies","catch","error","console","log","event","preventDefault","currentTarget","elements","value","dataLength","next","prevPage","hasMore","loader","scrollThreshold","KEY","BASE_URL","cachedMovies","searchedMovies","getTrendingMovies","axios","params","api_key","uniqueMovies","filter","movie","some","cachedMovie","push","query","searchedMovie","getMovieDetails","movieId","getCast","cast","getReviews"],"sourceRoot":""}