{"version":3,"file":"static/js/910.f1b0f113.chunk.js","mappings":"uNAgEA,UA1Da,WACX,OAAwBA,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GAYR,OAVAE,EAAAA,EAAAA,YAAU,WACRH,GAAa,SAAAD,GAAS,OAAKA,CAAL,KACtBK,EAAAA,EAAAA,IAAQH,GACLI,MAAK,SAAAC,GACJR,EAAQQ,EACT,IACAC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,IACXG,QAAQX,GAAa,SAAAD,GAAS,OAAKA,CAAL,IAClC,GAAE,CAACE,KAGF,gCACGF,IAAa,SAAC,IAAD,KACd,eACEa,MAAO,CACLC,UAAW,OACXC,QAAS,OACTC,SAAU,OACVC,IAAK,QALT,SAQGnB,GAAQA,EAAKoB,OAAS,EACnBpB,EAAKqB,KAAI,gBAAGjB,EAAH,EAAGA,GAAIkB,EAAP,EAAOA,KAAMC,EAAb,EAAaA,aAAcC,EAA3B,EAA2BA,UAA3B,OACP,gBAEET,MAAO,CACLU,MAAO,QACPC,OAAQ,QACRC,OAAQ,kBALZ,WAQE,gBACEC,IACEL,EAAY,6CAC8BA,GACtCM,EAENC,IAAKR,EACLG,MAAM,MACNC,OAAO,SAET,eAAIX,MAAO,CAAEgB,QAAS,EAAGC,OAAQ,EAAGC,aAAc,QAAlD,SACGX,KAEH,cAAGP,MAAO,CAAEgB,QAAS,EAAGC,OAAQ,GAAhC,SAAsCR,MApBjCpB,EAFA,IAyBT,sBAIX,C,mMC5DK8B,EAAM,mCACNC,EAAW,+BAEJC,EAAiB,mCAAG,qGACRC,EAAAA,EAAAA,GAAM,GAAD,OAAIF,EAAJ,uBAAmC,CAC7DG,OAAQ,CACNC,QAASL,KAHkB,cACzBM,EADyB,yBAMxBA,EAAS/B,MANe,2CAAH,qDASjBgC,EAAW,mCAAG,WAAMC,GAAN,wFACFL,EAAAA,EAAAA,GAAM,GAAD,OAAIF,EAAJ,iBAA6B,CACvDG,OAAQ,CACNC,QAASL,EACTQ,MAAAA,KAJqB,cACnBF,EADmB,yBAOlBA,EAAS/B,KAAKkC,SAPI,2CAAH,sDAUXC,EAAe,mCAAG,WAAMC,GAAN,wFACNR,EAAAA,EAAAA,GAAM,GAAD,OAAIF,EAAJ,kBAAsBU,GAAW,CAC3DP,OAAQ,CACNC,QAASL,KAHgB,cACvBM,EADuB,yBAMtBA,EAAS/B,MANa,2CAAH,sDASfF,EAAO,mCAAG,WAAMsC,GAAN,wFACER,EAAAA,EAAAA,GAAM,GAAD,OAAIF,EAAJ,kBAAsBU,EAAtB,YAAyC,CACnEP,OAAQ,CACNC,QAASL,KAHQ,cACfM,EADe,yBAMdA,EAAS/B,KAAKT,MANA,2CAAH,sDASP8C,EAAU,mCAAG,WAAMD,GAAN,wFACDR,EAAAA,EAAAA,GAAM,GAAD,OAAIF,EAAJ,kBAAsBU,EAAtB,YAAyC,CACnEP,OAAQ,CACNC,QAASL,KAHW,cAClBM,EADkB,yBAMjBA,EAAS/B,KAAKkC,SANG,2CAAH,qD","sources":["components/Cast.js","utils/service-api.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getCast } from 'utils/service-api';\nimport Loader from './Skeleton/Skeleton';\nimport notFound from './defaultImages/notFound.webp';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const { id } = useParams();\n\n  useEffect(() => {\n    setIsLoading(isLoading => !isLoading);\n    getCast(id)\n      .then(data => {\n        setCast(data);\n      })\n      .catch(error => console.log(error))\n      .finally(setIsLoading(isLoading => !isLoading));\n  }, [id]);\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      <ul\n        style={{\n          listStyle: 'none',\n          display: 'flex',\n          flexWrap: 'wrap',\n          gap: '10px',\n        }}\n      >\n        {cast && cast.length > 0\n          ? cast.map(({ id, name, profile_path, character }) => (\n              <li\n                key={id}\n                style={{\n                  width: '300px',\n                  height: '527px',\n                  border: '1px solid gray',\n                }}\n              >\n                <img\n                  src={\n                    profile_path\n                      ? `https://image.tmdb.org/t/p/original${profile_path}`\n                      : notFound\n                  }\n                  alt={name}\n                  width=\"300\"\n                  height=\"450\"\n                />\n                <h2 style={{ padding: 0, margin: 0, marginBottom: '10px' }}>\n                  {name}\n                </h2>\n                <p style={{ padding: 0, margin: 0 }}>{character}</p>\n              </li>\n            ))\n          : 'Cast not known.'}\n      </ul>\n    </>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst KEY = '53262c5d6ff8109487cc66546be6258b';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const getTrendingMovies = async () => {\n  const response = await axios(`${BASE_URL}/trending/movie/day`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n  return response.data;\n};\n\nexport const searchMovie = async query => {\n  const response = await axios(`${BASE_URL}/search/movie`, {\n    params: {\n      api_key: KEY,\n      query,\n    },\n  });\n  return response.data.results;\n};\n\nexport const getMovieDetails = async movieId => {\n  const response = await axios(`${BASE_URL}/movie/${movieId}`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n  return response.data;\n};\n\nexport const getCast = async movieId => {\n  const response = await axios(`${BASE_URL}/movie/${movieId}/credits`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n  return response.data.cast;\n};\n\nexport const getReviews = async movieId => {\n  const response = await axios(`${BASE_URL}/movie/${movieId}/reviews`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n  return response.data.results;\n};\n"],"names":["useState","cast","setCast","isLoading","setIsLoading","id","useParams","useEffect","getCast","then","data","catch","error","console","log","finally","style","listStyle","display","flexWrap","gap","length","map","name","profile_path","character","width","height","border","src","notFound","alt","padding","margin","marginBottom","KEY","BASE_URL","getTrendingMovies","axios","params","api_key","response","searchMovie","query","results","getMovieDetails","movieId","getReviews"],"sourceRoot":""}