{"version":3,"file":"static/js/357.69b56f21.chunk.js","mappings":"6MA8CA,UAzCgB,WACd,OAA8BA,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GAYR,OAVAE,EAAAA,EAAAA,YAAU,WACRH,GAAa,SAAAD,GAAS,OAAKA,CAAL,KACtBK,EAAAA,EAAAA,IAAWH,GACRI,MAAK,SAAAC,GACJR,EAAWQ,EACZ,IACAC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,IACXG,QAAQX,GAAa,SAAAD,GAAS,OAAKA,CAAL,IAClC,GAAE,CAACE,EAAIJ,KAGN,gCACGE,IAAa,SAAC,IAAD,KAEd,eACEa,MAAO,CACLC,QAAS,OACTC,SAAU,OACVC,UAAW,OACXC,UAAW,QACXC,IAAK,QANT,SASGpB,GAAWA,EAAQqB,OAAS,EACzBrB,EAAQsB,KAAI,gBAAGlB,EAAH,EAAGA,GAAImB,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACV,2BACE,wBAAKD,KACL,cAAGR,MAAO,CAAEU,aAAc,QAA1B,SAAqCD,MAF9BpB,EADC,IAMZ,sDAIX,C,mMC1CKsB,EAAM,mCACNC,EAAW,+BAEJC,EAAiB,mCAAG,qGACRC,EAAAA,EAAAA,GAAM,GAAD,OAAIF,EAAJ,uBAAmC,CAC7DG,OAAQ,CACNC,QAASL,KAHkB,cACzBM,EADyB,yBAMxBA,EAASvB,MANe,2CAAH,qDASjBwB,EAAW,mCAAG,WAAMC,GAAN,wFACFL,EAAAA,EAAAA,GAAM,GAAD,OAAIF,EAAJ,iBAA6B,CACvDG,OAAQ,CACNC,QAASL,EACTQ,MAAAA,KAJqB,cACnBF,EADmB,yBAOlBA,EAASvB,KAAK0B,SAPI,2CAAH,sDAUXC,EAAe,mCAAG,WAAMC,GAAN,wFACNR,EAAAA,EAAAA,GAAM,GAAD,OAAIF,EAAJ,kBAAsBU,GAAW,CAC3DP,OAAQ,CACNC,QAASL,KAHgB,cACvBM,EADuB,yBAMtBA,EAASvB,MANa,2CAAH,sDASf6B,EAAO,mCAAG,WAAMD,GAAN,wFACER,EAAAA,EAAAA,GAAM,GAAD,OAAIF,EAAJ,kBAAsBU,EAAtB,YAAyC,CACnEP,OAAQ,CACNC,QAASL,KAHQ,cACfM,EADe,yBAMdA,EAASvB,KAAK8B,MANA,2CAAH,sDASPhC,EAAU,mCAAG,WAAM8B,GAAN,wFACDR,EAAAA,EAAAA,GAAM,GAAD,OAAIF,EAAJ,kBAAsBU,EAAtB,YAAyC,CACnEP,OAAQ,CACNC,QAASL,KAHW,cAClBM,EADkB,yBAMjBA,EAASvB,KAAK0B,SANG,2CAAH,qD","sources":["components/Reviews.js","utils/service-api.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getReviews } from 'utils/service-api';\nimport Loader from './Skeleton/Skeleton';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const { id } = useParams();\n\n  useEffect(() => {\n    setIsLoading(isLoading => !isLoading);\n    getReviews(id)\n      .then(data => {\n        setReviews(data);\n      })\n      .catch(error => console.log(error))\n      .finally(setIsLoading(isLoading => !isLoading));\n  }, [id, reviews]);\n\n  return (\n    <>\n      {isLoading && <Loader />}\n\n      <ul\n        style={{\n          display: 'flex',\n          flexWrap: 'wrap',\n          listStyle: 'none',\n          textAlign: 'start',\n          gap: '10px',\n        }}\n      >\n        {reviews && reviews.length > 0\n          ? reviews.map(({ id, author, content }) => (\n              <li key={id}>\n                <h4>{author}</h4>\n                <p style={{ paddingRight: '30px' }}>{content}</p>\n              </li>\n            ))\n          : \"We don't have any reviews about this movie yet.\"}\n      </ul>\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst KEY = '53262c5d6ff8109487cc66546be6258b';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const getTrendingMovies = async () => {\n  const response = await axios(`${BASE_URL}/trending/movie/day`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n  return response.data;\n};\n\nexport const searchMovie = async query => {\n  const response = await axios(`${BASE_URL}/search/movie`, {\n    params: {\n      api_key: KEY,\n      query,\n    },\n  });\n  return response.data.results;\n};\n\nexport const getMovieDetails = async movieId => {\n  const response = await axios(`${BASE_URL}/movie/${movieId}`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n  return response.data;\n};\n\nexport const getCast = async movieId => {\n  const response = await axios(`${BASE_URL}/movie/${movieId}/credits`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n  return response.data.cast;\n};\n\nexport const getReviews = async movieId => {\n  const response = await axios(`${BASE_URL}/movie/${movieId}/reviews`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n  return response.data.results;\n};\n"],"names":["useState","reviews","setReviews","isLoading","setIsLoading","id","useParams","useEffect","getReviews","then","data","catch","error","console","log","finally","style","display","flexWrap","listStyle","textAlign","gap","length","map","author","content","paddingRight","KEY","BASE_URL","getTrendingMovies","axios","params","api_key","response","searchMovie","query","results","getMovieDetails","movieId","getCast","cast"],"sourceRoot":""}