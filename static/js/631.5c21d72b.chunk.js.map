{"version":3,"file":"static/js/631.5c21d72b.chunk.js","mappings":"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","sources":["pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.js","utils/service-api.js"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\nimport { IoMdArrowBack } from 'react-icons/io';\n\nexport const MovieDescr = styled.div`\n  text-align: start;\n  padding: 0 15px;\n`;\n\nexport const MovieInfo = styled.div`\n  border-bottom: 1px gray solid;\n  display: flex;\n  padding: 10px;\n`;\n\nexport const StyledNavLink = styled(NavLink)`\n  text-align: start;\n  text-decoration: none;\n  color: black;\n\n  &.active {\n    color: orangered;\n  }\n`;\n\nexport const StyledArrowIcon = styled(IoMdArrowBack)`\n  display: flex;\n  align-items: baseline;\n  justify-content: left;\n  margin-left: 15px;\n  padding: 5px;\n  font-size: 20px;\n  :hover {\n    color: orangered;\n  }\n`;\n","import { useParams, Outlet, Link, useLocation } from 'react-router-dom';\nimport { useState, useEffect, useRef, Suspense } from 'react';\nimport { getMovieDetails } from 'utils/service-api';\nimport Loader from 'components/Skeleton/Skeleton';\nimport {\n  MovieInfo,\n  MovieDescr,\n  StyledNavLink,\n  StyledArrowIcon,\n} from './MovieDetails.styled';\nimport defaultPoster from '../../components/defaultImages/default-movie.jpg';\n\nconst MovieDetails = () => {\n  const { id } = useParams();\n  const [movie, setMovie] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(isLoading => !isLoading);\n\n    getMovieDetails(id)\n      .then(setMovie)\n      .catch(error => console.log(error))\n      .finally(setIsLoading(isLoading => !isLoading));\n  }, [id]);\n\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/');\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      <Link to={backLinkLocationRef.current}>\n        <StyledArrowIcon />\n      </Link>\n      {movie && movie && (\n        <MovieInfo>\n          <img\n            src={\n              movie.poster_path\n                ? `https://image.tmdb.org/t/p/original${movie.poster_path}`\n                : defaultPoster\n            }\n            alt={movie.title}\n            width=\"300\"\n            height=\"450\"\n            loading=\"lazy\"\n          />\n          <MovieDescr>\n            <h2>\n              {movie.title}{' '}\n              <span style={{ fontWeight: 400 }}>\n                (\n                {movie.release_date\n                  ? movie.release_date.slice(0, 4)\n                  : 'No date'}\n                )\n              </span>\n            </h2>\n            <h3>\n              User Score:{' '}\n              <span style={{ fontWeight: 400 }}>\n                {movie.vote_average\n                  ? movie.vote_average.toFixed(1) * 10 + '%'\n                  : 'This movie does not have user score.'}\n              </span>\n            </h3>\n            <h3>Overview: </h3>\n            <p>{movie.overview ? movie.overview : 'No movie description'}</p>\n            <h3>\n              Genres:{' '}\n              <span style={{ fontWeight: 400 }}>\n                {movie.genres.length\n                  ? movie.genres.map(({ name }) => [name]).join(', ')\n                  : 'No genre'}\n              </span>\n            </h3>\n          </MovieDescr>\n        </MovieInfo>\n      )}\n\n      <h2>Additional information</h2>\n      <ul\n        style={{\n          display: 'flex',\n          gap: '10px',\n          textAlign: 'start',\n          listStyle: 'none',\n        }}\n      >\n        <li>\n          <StyledNavLink to=\"cast\">Cast</StyledNavLink>\n        </li>\n        <li>\n          <StyledNavLink to=\"reviews\">Reviews</StyledNavLink>\n        </li>\n      </ul>\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst KEY = '53262c5d6ff8109487cc66546be6258b';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const getTrendingMovies = async () => {\n  const response = await axios(`${BASE_URL}/trending/movie/day`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n  return response.data;\n};\n\nexport const searchMovie = async query => {\n  const response = await axios(`${BASE_URL}/search/movie`, {\n    params: {\n      api_key: KEY,\n      query,\n    },\n  });\n  return response.data.results;\n};\n\nexport const getMovieDetails = async movieId => {\n  const response = await axios(`${BASE_URL}/movie/${movieId}`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n  return response.data;\n};\n\nexport const getCast = async movieId => {\n  const response = await axios(`${BASE_URL}/movie/${movieId}/credits`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n  return response.data.cast;\n};\n\nexport const getReviews = async movieId => {\n  const response = await axios(`${BASE_URL}/movie/${movieId}/reviews`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n  return response.data.results;\n};\n"],"names":["MovieDescr","styled","MovieInfo","StyledNavLink","NavLink","StyledArrowIcon","IoMdArrowBack","id","useParams","useState","movie","setMovie","isLoading","setIsLoading","useEffect","getMovieDetails","then","catch","error","console","log","finally","location","useLocation","backLinkLocationRef","useRef","state","from","to","current","src","poster_path","defaultPoster","alt","title","width","height","loading","style","fontWeight","release_date","slice","vote_average","toFixed","overview","genres","length","map","name","join","display","gap","textAlign","listStyle","Suspense","fallback","KEY","BASE_URL","getTrendingMovies","axios","params","api_key","response","data","searchMovie","query","results","movieId","getCast","cast","getReviews"],"sourceRoot":""}