{"version":3,"file":"static/js/631.01b9293a.chunk.js","mappings":"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","sources":["pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.js","utils/service-api.js"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\nimport { IoMdArrowBack } from 'react-icons/io';\n\nexport const MovieInfo = styled.div`\n  display: flex;\n  height: 450px;\n  padding: 16px;\n  border-bottom: 1px gray solid;\n`;\n\nexport const MovieDescr = styled.div`\n  text-align: start;\n  padding: 0 15px;\n`;\n\nexport const StyledNavLink = styled(NavLink)`\n  text-align: start;\n  text-decoration: none;\n  color: black;\n\n  &.active {\n    color: orangered;\n  }\n`;\n\nexport const StyledArrowIcon = styled(IoMdArrowBack)`\n  display: flex;\n  align-items: baseline;\n  justify-content: left;\n  margin-left: 15px;\n  padding: 5px;\n  font-size: 20px;\n\n  :hover {\n    color: orangered;\n  }\n`;\n","import { useState, useEffect, useRef, Suspense } from 'react';\nimport { useParams, Outlet, Link, useLocation } from 'react-router-dom';\nimport { getMovieDetails } from 'utils/service-api';\nimport Loader from 'components/Skeleton/Skeleton';\nimport {\n  MovieInfo,\n  MovieDescr,\n  StyledNavLink,\n  StyledArrowIcon,\n} from './MovieDetails.styled';\nimport defaultPoster from '../../components/defaultImages/default-movie.jpg';\n\nconst MovieDetails = () => {\n  const { id } = useParams();\n  const [movie, setMovie] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n    getMovieDetails(id)\n      .then(setMovie)\n      .catch(error => console.log(error))\n      .finally(() => setIsLoading(false));\n  }, [id]);\n\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/');\n\n  return (\n    <>\n      {isLoading && <Loader page={`/movies/${id}`} />}\n      {movie && (\n        <>\n          <Link to={backLinkLocationRef.current}>\n            <StyledArrowIcon />\n          </Link>\n          <MovieInfo>\n            <img\n              src={\n                movie.poster_path\n                  ? `https://image.tmdb.org/t/p/original${movie.poster_path}`\n                  : defaultPoster\n              }\n              alt={movie.title}\n              width=\"300\"\n              height=\"450\"\n              loading=\"lazy\"\n              style={{ backgroundColor: '#ebebeb' }}\n            />\n            <MovieDescr>\n              <h2>\n                {movie.title}{' '}\n                <span style={{ fontWeight: 400 }}>\n                  (\n                  {movie.release_date\n                    ? movie.release_date.slice(0, 4)\n                    : 'No date'}\n                  )\n                </span>\n              </h2>\n              <h3>\n                User Score:{' '}\n                <span style={{ fontWeight: 400 }}>\n                  {movie.vote_average\n                    ? movie.vote_average.toFixed(1) * 10 + '%'\n                    : 'This movie does not have user score.'}\n                </span>\n              </h3>\n              <h3>Overview: </h3>\n              <p>{movie.overview ? movie.overview : 'No movie description'}</p>\n              <h3>\n                Genres:{' '}\n                <span style={{ fontWeight: 400 }}>\n                  {movie.genres.length\n                    ? movie.genres.map(({ name }) => [name]).join(', ')\n                    : 'No genre'}\n                </span>\n              </h3>\n            </MovieDescr>\n          </MovieInfo>\n          <h2>Additional information</h2>\n          <ul\n            style={{\n              display: 'flex',\n              gap: '10px',\n              textAlign: 'start',\n              listStyle: 'none',\n            }}\n          >\n            <li>\n              <StyledNavLink to=\"cast\">Cast</StyledNavLink>\n            </li>\n            <li>\n              <StyledNavLink to=\"reviews\">Reviews</StyledNavLink>\n            </li>\n          </ul>\n          <Suspense fallback={<Loader page={location.pathname} />}>\n            <Outlet />\n          </Suspense>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst KEY = '53262c5d6ff8109487cc66546be6258b';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios(`${BASE_URL}/trending/movie/day`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n  return data;\n};\n\nexport const searchMovie = async query => {\n  const { data } = await axios(`${BASE_URL}/search/movie`, {\n    params: {\n      api_key: KEY,\n      query,\n    },\n  });\n  return data;\n};\n\nexport const getMovieDetails = async movieId => {\n  const { data } = await axios(`${BASE_URL}/movie/${movieId}`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n  return data;\n};\n\nexport const getCast = async movieId => {\n  const { data } = await axios(`${BASE_URL}/movie/${movieId}/credits`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n  return data.cast;\n};\n\nexport const getReviews = async movieId => {\n  const { data } = await axios(`${BASE_URL}/movie/${movieId}/reviews`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n  return data.results;\n};\n"],"names":["MovieInfo","styled","MovieDescr","StyledNavLink","NavLink","StyledArrowIcon","IoMdArrowBack","id","useParams","useState","movie","setMovie","isLoading","setIsLoading","useEffect","getMovieDetails","then","catch","error","console","log","finally","location","useLocation","backLinkLocationRef","useRef","state","from","page","to","current","src","poster_path","defaultPoster","alt","title","width","height","loading","style","backgroundColor","fontWeight","release_date","slice","vote_average","toFixed","overview","genres","length","map","name","join","display","gap","textAlign","listStyle","Suspense","fallback","pathname","KEY","BASE_URL","getTrendingMovies","axios","params","api_key","data","searchMovie","query","movieId","getCast","cast","getReviews","results"],"sourceRoot":""}