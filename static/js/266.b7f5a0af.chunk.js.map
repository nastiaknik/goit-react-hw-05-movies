{"version":3,"file":"static/js/266.b7f5a0af.chunk.js","mappings":"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","sources":["components/MovieCard/MovieCard.styled.js","components/MovieCard/MovieCard.js","components/MovieList/MovieList.styled.js","components/MovieList/MovieList.js","pages/Home.js","utils/service-api.js"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const StyledCard = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  border: 1px gray solid;\n  width: 300px;\n  height: 525px;\n  text-align: center;\n`;\n\nexport const StyledLink = styled(NavLink)`\n  text-decoration: none;\n`;\n\nexport const Img = styled.img`\n  background-color: #ebebeb;\n`;\n\nexport const MovieTitle = styled.p`\n  font-size: 20px;\n  font-weight: 700;\n  text-decoration: none;\n  padding: 0 5px;\n  color: black;\n`;\n","import PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\nimport { StyledLink, StyledCard, Img, MovieTitle } from './MovieCard.styled';\nimport defaultPoster from '../../components/defaultImages/default-movie.jpg';\n\nexport const MovieCard = ({ id, poster, title }) => {\n  const location = useLocation();\n  return (\n    <StyledLink to={`/movies/${id}`} state={{ from: location }}>\n      <StyledCard>\n        <Img\n          src={\n            poster\n              ? `https://image.tmdb.org/t/p/original${poster}`\n              : defaultPoster\n          }\n          alt={title}\n          width=\"300\"\n          height=\"450\"\n          loading=\"lazy\"\n        />\n        <MovieTitle>\n          {title.length <= 45 ? title : title.slice(1, 45) + '...'}\n        </MovieTitle>\n      </StyledCard>\n    </StyledLink>\n  );\n};\n\nMovieCard.propTypes = {\n  id: PropTypes.number.isRequired,\n  poster: PropTypes.string,\n  title: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const StyledMovieList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 15px;\n  list-style: none;\n`;\n","import PropTypes from 'prop-types';\nimport { MovieCard } from 'components/MovieCard/MovieCard';\nimport { StyledMovieList } from './MovieList.styled';\n\nexport default function MovieList({ movies }) {\n  return (\n    <StyledMovieList>\n      {movies &&\n        movies.map(({ id, poster_path, title }) => (\n          <li key={id}>\n            <MovieCard id={id} poster={poster_path} title={title} />\n          </li>\n        ))}\n    </StyledMovieList>\n  );\n}\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      poster_path: PropTypes.string,\n      title: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import { useState, useEffect } from 'react';\nimport { toast } from 'react-toastify';\nimport MovieList from 'components/MovieList/MovieList';\nimport { getTrendingMovies } from 'utils/service-api';\n\nconst Home = () => {\n  const [trendingMovies, setTrendingMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(isLoading => !isLoading);\n\n    getTrendingMovies()\n      .then(data => {\n        setTrendingMovies(data.results);\n        if (!data.results) {\n          return toast.error('Sorry, there are no trending movies for today.');\n        }\n      })\n      .catch(error => console.log(error))\n      .finally(setIsLoading(isLoading => !isLoading));\n  }, []);\n\n  return (\n    <>\n      {!isLoading && trendingMovies && (\n        <>\n          <h2 style={{ marginTop: 0 }}>Trending Movies Today</h2>\n          <MovieList movies={trendingMovies} />\n        </>\n      )}\n    </>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\nconst KEY = '53262c5d6ff8109487cc66546be6258b';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios(`${BASE_URL}/trending/movie/day`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n  return data;\n};\n\nexport const searchMovie = async query => {\n  const { data } = await axios(`${BASE_URL}/search/movie`, {\n    params: {\n      api_key: KEY,\n      query,\n    },\n  });\n  return data;\n};\n\nexport const getMovieDetails = async movieId => {\n  const { data } = await axios(`${BASE_URL}/movie/${movieId}`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n  return data;\n};\n\nexport const getCast = async movieId => {\n  const { data } = await axios(`${BASE_URL}/movie/${movieId}/credits`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n  return data.cast;\n};\n\nexport const getReviews = async movieId => {\n  const { data } = await axios(`${BASE_URL}/movie/${movieId}/reviews`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n  return data.results;\n};\n"],"names":["StyledCard","styled","StyledLink","NavLink","Img","MovieTitle","MovieCard","id","poster","title","location","useLocation","to","state","from","src","defaultPoster","alt","width","height","loading","length","slice","StyledMovieList","MovieList","movies","map","poster_path","useState","trendingMovies","setTrendingMovies","isLoading","setIsLoading","useEffect","getTrendingMovies","then","data","results","toast","catch","error","console","log","finally","style","marginTop","KEY","BASE_URL","axios","params","api_key","searchMovie","query","getMovieDetails","movieId","getCast","cast","getReviews"],"sourceRoot":""}